#!/bin/sh
###########################################################################
# Copyright (C) 2009 Swedish Meteorological and Hydrological Institute, SMHI,
#
# This file is part of HLHDF.
#
# HLHDF is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# HLHDF is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with HLHDF.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
#
# Script performing build and installation tests.
#
# The configuration part is a bit rudimentary at the time and requires that
# a file called .test_conf exists in the HLHDF source root directory
# with a line containing the ./configure directive except the --prefix part
# that is automatically generated by this script
#
# @author Anders Henja (Swedish Meteorological and Hydrological Institute, SMHI)
# @date 2009-08-19
###########################################################################

failed_test_case() {
  CODE=$1
  MESSAGE=$2
  if [ $CODE -ne 0 ]; then
    echo "$MESSAGE"
    exit 255
  fi
}

check_directory() {
  COMMENT=$1
  DIRNAME=$2
  if [ ! -d "$DIRNAME" ]; then
    echo "Test [$COMMENT] failed: No directory named '$DIRNAME'"
    exit 255
  fi
}

check_file() {
  COMMENT=$1
  FILENAME=$2
  if [ ! -f "$FILENAME" ]; then
    echo "Test [$COMMENT] failed: No file named '$FILENAME'"
    exit 255
  fi
}  

verify_directory() {
  COMMENT=$1
  DIRNAME=$2
  if [ ! -d "$DIRNAME" ]; then
    echo "Test [$COMMENT] failed: No directory named '$DIRNAME'"
    return 255
  fi
  return 0
}

verify_file() {
  COMMENT=$1
  FILENAME=$2
  if [ ! -f "$FILENAME" ]; then
    echo "Test [$COMMENT] failed: No file named '$FILENAME'"
    return 255
  fi
  return 0
}

verify_symbolic_link() {
  DIRNAME=$1
  TGTNAME=$2
  COMMENT=$3
  if [ ! -h "$DIRNAME" ]; then
    echo "Test [$COMMENT] failed: $DIRNAME is not a symbolic link"
    return 255
  fi
  STR=`readlink "$DIRNAME"`
  if [ "x$STR" != "x$TGTNAME" ]; then
    echo "Test [$COMMENT] failed: $DIRNAME does not point at $TGTNAME"
    return 255
  fi
  return 0
}

verify_source_structure() {
  COMMENT=$1
  VERSION=$2
  check_directory "$COMMENT" "hlhdf-$VERSION"
  check_file "$COMMENT" "hlhdf-$VERSION/INSTALL"
  check_file "$COMMENT" "hlhdf-$VERSION/LICENSE"
  check_file "$COMMENT" "hlhdf-$VERSION/README"
  check_file "$COMMENT" "hlhdf-$VERSION/.version"
  VERNBR=`cat hlhdf-$VERSION/.version`
  if [ "x$VERSION" != "x$VERNBR" ]; then
    echo "Test [$COMMENT] failed: Version numbers does not match with hlhdf-$VERSION/.version"
    exit 255
  fi
}

execute_one_install_test() {
  COMMENT=$1
  TARBALL=$2
  VERSION=$3
  BUILDDIR=$4
  INSTALLDIR=$5
  CONFIGCMD=$6

  # Setup
  \rm -fr "$BUILDDIR"
  \rm -fr "$INSTALLDIR"
  mkdir "$BUILDDIR"
  cd "$BUILDDIR"
  tar -xvzf "$TARBALL"

  # Verify source files and directory structure
  verify_source_structure "$COMMENT" "$VERSION"

  # Test
  cd "hlhdf-$VERSION"
  failed_test_case "$?" "Test [$COMMENT] failed: Incorrect directory name when extracting HLHDF"
  
  $CONFIGCMD --prefix="$INSTALLDIR"
  failed_test_case "$?" "Test [$COMMENT] failed: Could not configure the software"
  
  make
  failed_test_case "$?" "Test [$COMMENT] failed: Could not build the software"
  
  make test
  failed_test_case "$?" "Test [$COMMENT] failed: Could not run unit tests on software"
  
  make install
  failed_test_case "$?" "Test [$COMMENT] failed: Could not install software"
  
  # Verify that structure is correct on installation
  cd "$INSTALLDIR"
  verify_directory "$VERSION" "$COMMENT" || return 255
  verify_symbolic_link "bin" "$VERSION/bin" "$COMMENT" || return 255
  verify_symbolic_link "include" "$VERSION/include" "$COMMENT" || return 255
  verify_symbolic_link "lib" "$VERSION/lib" "$COMMENT" || return 255
  verify_symbolic_link "mkf" "$VERSION/mkf" "$COMMENT" || return 255
  verify_file "hlhdf.pth" "$COMMENT" || return 255

  \rm -fr "$BUILDDIR"
  \rm -fr "$INSTALLDIR"
  return 0
}

SCRFILE=`python -c "import os;print os.path.abspath(\"$0\")"`
SCRIPTPATH=`dirname "$SCRFILE"`
cd "$SCRIPTPATH/.."

CONFIGURECMD=./configure
if [ -f .test_conf ]; then
  CONFIGURECMD=`cat .test_conf`
else
  echo "No configuration parameters setup, will only use ./configure"
  echo "If you want some other ./configure parameters, edit the file .test_conf in the root directory of HLHDF"
  echo "with only one line containing the full ./configure command."
  echo "NOTE! Do not specify --prefix since that is automatically generated by this script"
fi

TB=$1
VER=$2
if [ ! -f "$TB" ]; then
  echo "No '$TB' file found"
  exit 255
fi
if [ "x" = "x$VER" ]; then
  echo "No version specified"
  exit 255
fi

echo "Startinng build and installation tests"

execute_one_install_test "Standard" "$TB" "$VER" "/tmp/hlhdfbuild" "/tmp/hlhdfinstall" "$CONFIGURECMD" || exit 255
#execute_one_install_test "Whitespace in build" "$TB" "$VER" "/tmp/hlhdf build" "/tmp/hlhdfinstall" "$CONFIGURECMD" || exit 255
#execute_one_install_test "Whitespace in install" "$TB" "$VER" "/tmp/hlhdfbuild" "/tmp/hlhdf install" "$CONFIGURECMD" || exit 255

exit 0